name: Issue check

on:
  issues:
    types:
      - edited
      - closed
      - reopened

# Allow GITHUB_TOKEN to write to issues
permissions:
  issues: write

jobs:
  qw-check:
    if: ${{ github.event_name != 'pull_request' }}
    outputs:
      issues: ${{ steps.qw-check.output.issues }}
      comment: ${{ steps.qw-check.output.comment }}
      comment-id: ${{ steps.fc.output.comment-id }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout qw
        uses: actions/checkout@v2
        with:
          repository: UCL-ARC/qw
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: 'pip'
      - name: Install dependencies
        run: pip install .
      - name: qw check
        # always set to true so it runs
        id: qw-check
        run: |
          echo "comment=true" >> "$GITHUB_OUTPUT" &&
          mkdir qw &&
          echo '## Problems found from last edit by {{ .user }} on {{ .date | date "2006-01-02"}}' > qw/issues.md
          echo "" >> qw/issues.md
          echo "- [ ] First issue details" >> qw/issues.md
          echo "- [ ] Second Issue details" >> qw/issues.md
          echo "- [ ] Third issue" >> qw/issues.md
      - uses: actions/upload-artifact@master
        with:
          name: qw
          path: qw
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number:  ${{ github.event.issue.number }}
          comment-author: "github-actions[bot]"
          body-includes: "## Problems found from last edit"
      - name: Dump GitHub output
        run: |
          echo "$GITHUB_OUTPUT"

  comment-problems:
    runs-on: ubuntu-latest
    needs: qw-check
    if: ${{ needs.qw-check.outputs.comment }} == 'true'
    steps:
      - name: Dump GitHub needs
        env:
          GITHUB_NEEDS: ${{ toJson(needs) }}
        run: |
          echo "$GITHUB_NEEDS"
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
      - name: dump outputs
        run: |
          echo "${{ needs.qw-check.outputs.comment }}"
      - uses: actions/download-artifact@master
        with:
          name: qw
          path: qw
      - name: dump issue file
        run: |
          cat qw/issues.md
      - name: Render template
        id: template
        uses: chuhlomin/render-template@v1.8
        with:
          template: qw/issues.md
          vars: |
            user: ${{ github.actor }}
            date: ${{ github.event.issue.update_at }}
      - name: Create Comment
        if: needs.qw-check.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v3.1.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: ${{ steps.template.outputs.result }}
      - name: Update Comment
        if: needs.qw-check.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v3.1.0
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: ${{ steps.template.outputs.result }}
          edit-mode: replace

  comment-fixed:
    runs-on: ubuntu-latest
    needs: qw-check
    if: ${{ needs.qw-check.outputs.comment }} != 'true' && needs.qw-check.outputs.comment-id != ''
    steps:
      - name: Create resolved issues markdown file
        run: |
          mkdir qw &&
          echo '## Problems fixed from edit by {{ .user }} on {{ .date | date "2006-01-02"}}' > qw/issues.md
      - name: Render template
        id: template
        uses: chuhlomin/render-template@v1.8
        with:
          template: qw/issues.md
          vars: |
            user: ${{ github.actor }}
            date: ${{ github.event.issue.update_at }}
      - name: Update Comment
        if: needs.qw-check.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v3.1.0
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: ${{ steps.template.outputs.result }}
          edit-mode: replace